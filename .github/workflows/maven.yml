name: Java CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] # windows currently returns test errors
        jdk: [8, 11]
        include:
          # lengthy build steps should only be performed on linux with Java 11 (CodeCov analysis, deployment)
          - os: ubuntu-latest
            jdk: 11
            isMainBuildEnv: true
            namePrefix: 'Main '
      fail-fast: false

    name: ${{ matrix.namePrefix }} Maven build (${{ matrix.os }}, JDK ${{ matrix.jdk }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up cache for ~/.m2/repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.jdk }}
          # generate settings.xml with the correct values
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy

      # sets environment variables to be used in subsequent steps: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Set environment variables
        shell: bash
        run: |
          if [ "${{ matrix.isMainBuildEnv }}" = "true" ]; then
            echo "MVN_ADDITIONAL_OPTS=-Dlogback.configurationFile=bundle/src/test/resources/logback-test-no-logging.xml -Pcoverage,dependency-check" >> $GITHUB_ENV
            if [ "${{github.ref}}" = "refs/heads/master" ]; then
              echo "MAVEN_USERNAME=${{ secrets.OSSRH_TOKEN_USER }}" >> $GITHUB_ENV
              echo "MAVEN_PASSWORD=${{ secrets.OSSRH_TOKEN_PASSWORD }}" >> $GITHUB_ENV
              echo "MVN_GOAL=clean deploy" >> $GITHUB_ENV
              echo "STEP_NAME_SUFFIX=(Deploys to OSSRH)" >> $GITHUB_ENV
            else
              echo "MVN_GOAL=clean verify" >> $GITHUB_ENV
            fi
          else
            echo "MVN_ADDITIONAL_OPTS=" >> $GITHUB_ENV
            echo "MVN_GOAL=clean verify" >> $GITHUB_ENV
          fi

      - name: ${{ matrix.namePrefix }} Build with Maven ${{ env.STEP_NAME_SUFFIX }}
        run: mvn -e -B -V ${{ env.MVN_GOAL }} ${{ env.MVN_ADDITIONAL_OPTS }}

      - name: Upload code coverage to CodeCov (Main build)
        if: ${{ matrix.isMainBuildEnv }}
        run: bash <(curl -s https://codecov.io/bash)

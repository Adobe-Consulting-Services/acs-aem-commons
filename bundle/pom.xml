<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd ">
	<modelVersion>4.0.0</modelVersion>
	<!-- ====================================================================== -->
	<!-- P A R E N T P R O J E C T D E S C R I P T I O N -->
	<!-- ====================================================================== -->
	<parent>
		<groupId>com.adobe.acs</groupId>
		<artifactId>acs-aem-commons</artifactId>
		<version>4.4.3-SNAPSHOT</version>
	</parent>

	<!-- ====================================================================== -->
	<!-- P R O J E C T D E S C R I P T I O N -->
	<!-- ====================================================================== -->

	<artifactId>acs-aem-commons-bundle</artifactId>
	<packaging>bundle</packaging>
	<name>ACS AEM Commons Bundle</name>
	<description>Main ACS AEM Commons OSGi Bundle. Includes commons utilities.</description>

	<!-- ====================================================================== -->
	<!-- B U I L D D E F I N I T I O N -->
	<!-- ====================================================================== -->
	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>generate-scr-metadata-for-unittests</id>
						<goals>
							<goal>manifest</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<exportScr>true</exportScr>
							<instructions>
								<_dsannotations>*</_dsannotations>
								<_metatypeannotations>*</_metatypeannotations>
							</instructions>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<supportIncrementalBuild>true</supportIncrementalBuild>
					<exportScr>true</exportScr>
					<instructions>
						<Bundle-Activator>com.adobe.acs.commons.util.impl.Activator</Bundle-Activator>
						<Bundle-SymbolicName>com.adobe.acs.acs-aem-commons-bundle</Bundle-SymbolicName>
						<Import-Package>
							com.adobe.cq.dialogconversion;resolution:=optional,
							com.amazonaws.*;resolution:=optional, <!-- only required for MCP S3 
								Ingestor -->
							com.github.jknack.handlebars;resolution:=optional, <!-- only required 
								for Report Builder -->
							com.day.cq.replication;version="[6.4,7)", <!-- using a wider version 
								range for forward compatibility -->
							org.apache.poi.ss.usermodel;version="[3.0,6)",  <!-- using a wider version 
								range for forward compatibility -->
							org.apache.poi.ss.util;version="[3.0,6)",
							org.apache.poi.xssf.usermodel;version="[2.0,6)",
							twitter4j*;version="[3.0.5,4)";resolution:=optional,
							org.apache.sling.xss;version="[1.1,3)", <!-- using a wider version 
								range for forward compatibility -->
							com.github.benmanes.caffeine*;resolution:=optional,
							com.fasterxml.jackson.core;version="[2.8,3)";resolution:=optional,
							com.fasterxml.jackson.databind;version="[2.8,3)";resolution:=optional,
							javax.xml.bind;version="[2.2,3)";resolution:=optional,
							<!-- this explicit import can be removed when we no longer support 
								a version of AEM that supports java versions before 11 -->
							javax.annotation;version=0.0.0,
							!com.google.errorprone.annotations,
							!com.google.errorprone.annotations.concurrent,
							!org.bouncycastle.jce.*,
							!org.checkerframework.checker.nullness.qual,
							!android.util.*,
							<!-- shaded libraries -->
							!com.google.common.*,
							!com.google.thirdparty.*,
							!com.jcraft.*,
							!io.jsonwebtoken.*,
							*
						</Import-Package>
						<Sling-Model-Packages>
							com.adobe.acs.commons.cloudconfig,
							com.adobe.acs.commons.marketo,
							com.adobe.acs.commons.redirectmaps.models,
							com.adobe.acs.commons.version.model,
							com.adobe.acs.commons.wcm.comparisons.model,
							com.adobe.acs.commons.workflow.bulk.execution.model,
							com.adobe.acs.commons.mcp.model,
							com.adobe.acs.commons.reports.models
						</Sling-Model-Packages>
					</instructions>
				</configuration>
			</plugin>
			<!-- This bit of ugliness is because both the OSGi standard annotation 
				process (in the bundle plugin) and the legacy SCR process (in the scr plugin) 
				both blow away the current target/classes/OSGI-INF directory. So what happens 
				here is that first the bundle plugin runs (populating target/classes/OSGI-INF), 
				then we backup that directory, then run the scr plugin, and then merge the 
				two directories. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>backup-scr-files</id>
						<phase>process-classes</phase>
						<configuration>
							<target>
								<move todir="${project.build.outputDirectory}/OSGI-INF.bak">
									<fileset dir="${project.build.outputDirectory}/OSGI-INF" />
								</move>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>merge-scr-files</id>
						<phase>generate-test-sources</phase>
						<configuration>
							<target>
								<move todir="${project.build.outputDirectory}/OSGI-INF" overwrite="false">
									<fileset dir="${project.build.outputDirectory}/OSGI-INF.bak" />
								</move>
								<delete dir="${project.build.outputDirectory}/OSGI-INF.bak" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>force-l10n-into-bundle</id>
						<phase>package</phase>
						<configuration>
							<target>
								<jar update="true" destfile="${project.build.directory}/${project.build.finalName}.jar">
									<fileset dir="${project.build.outputDirectory}" includes="OSGI-INF/l10n/**" />
								</jar>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-scr-descriptor</id>
						<goals>
							<goal>scr</goal>
						</goals>
						<configuration>
							<properties>
								<service.vendor>Adobe Systems Incorporated</service.vendor>
							</properties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.sling</groupId>
				<artifactId>maven-sling-plugin</artifactId>
				<configuration>
					<slingUrl>http://${crx.host}:${crx.port}${crx.contextRoot}/crx/repository/crx.default</slingUrl>
					<slingUrlSuffix>/apps/acs-commons/install</slingUrlSuffix>
					<deploymentMethod>WebDAV</deploymentMethod>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<artifactPath>${project.artifact.file.absolutePath}</artifactPath>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<configuration>
							<rules>
								<bannedDependencies>
									<!-- here we need to explicitly list the set of dependencies which 
										are allowed with scope=compile -->
									<includes>
										<include>com.google.guava:guava</include>
										<include>com.google.guava:failureaccess</include>
										<include>io.jsonwebtoken:jjwt</include>
										<include>com.jcraft:jsch</include>
										<include>com.jcraft:jzlib</include>
									</includes>
								</bannedDependencies>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createSourcesJar>true</createSourcesJar>
							<shadeSourcesContent>true</shadeSourcesContent>
							<artifactSet>
								<includes>
									<include>com.google.guava:guava</include>
									<include>com.google.guava:failureaccess</include>
									<include>com.jcraft:jsch</include>
									<include>com.jcraft:jzlib</include>
									<include>io.jsonwebtoken:jjwt</include>
								</includes>
							</artifactSet>
							<relocations>
								<relocation>
									<pattern>com.google.common</pattern>
									<shadedPattern>acscommons.com.google.common</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.google.thirdparty</pattern>
									<shadedPattern>acscommons.com.google.thirdparty</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.jcraft</pattern>
									<shadedPattern>acscommons.com.jcraft</shadedPattern>
								</relocation>
								<relocation>
									<pattern>io.jsonwebtoken</pattern>
									<shadedPattern>acscommons.io.jsonwebtoken</shadedPattern>
								</relocation>
							</relocations>
							<filters>
								<filter>
									<artifact>com.google.guava:guava</artifact>
									<includes>
										<include>com/google/**</include>
									</includes>
								</filter>
								<filter>
									<artifact>com.google.guava:failureaccess</artifact>
									<includes>
										<include>com/google/**</include>
									</includes>
								</filter>
								<filter>
									<artifact>com.jcraft:jsch</artifact>
									<includes>
										<include>com/jcraft/**</include>
									</includes>
								</filter>
								<filter>
									<artifact>com.jcraft:jzlib</artifact>
									<includes>
										<include>com/jcraft/**</include>
									</includes>
								</filter>
								<filter>
									<artifact>io.jsonwebtoken:jjwt</artifact>
									<includes>
										<include>io/jsonwebtoken/**</include>
									</includes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<reuseForks>false</reuseForks>
					<forkCount>1C</forkCount>
				</configuration>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<reuseForks>true</reuseForks>
							<parallel>classes</parallel>
							<threadCount>1</threadCount>
							<perCoreThreadCount />
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient-osgi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.cmpn</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr.annotations</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>biz.aQute</groupId>
			<artifactId>bndlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.scribe</groupId>
			<artifactId>scribe</artifactId>
			<version>1.3.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.adobe.cq</groupId>
			<artifactId>cq-dialog-conversion</artifactId>
			<version>1.0.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3</version>
			<scope>provided</scope>
		</dependency>
		<!-- for disabling components in AEM 6.0 -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr</artifactId>
			<version>1.8.2</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<!-- for disabling components in AEM 6.1 (leveraging DS 1.3 API) -->
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.service.component</artifactId>
			<version>1.3.0</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.util.promise</artifactId>
			<version>1.0.0</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.framework</artifactId>
			<version>4.6.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- Http Cache Dependencies -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>failureaccess</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- MCP: Apache POI used for exporting Excel spreadsheets -->
		<dependency>
			<groupId>com.adobe.granite</groupId>
			<artifactId>com.adobe.granite.poi</artifactId>
			<version>2.0.6</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.14</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>1.5</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>com.drewnoakes</groupId>
					<artifactId>metadata-extractor</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-osgi</artifactId>
			<version>1.10.76</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.55</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jzlib</artifactId>
			<version>1.1.3</version>
			<optional>true</optional>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
		</dependency>
		<dependency>
			<groupId>junit-addons</groupId>
			<artifactId>junit-addons</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-netty</artifactId>
			<version>5.6.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xercesImpl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.7</version>
			<scope>test</scope>
		</dependency>
		<!-- needed to override the embedded commons.osgi in org.apache.sling.models.impl -->
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.commons.osgi</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.models.impl</artifactId>
			<version>1.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.commons.html</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<!-- the custom annotation for AemObject -->
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.models.api</artifactId>
			<version>1.3.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.jackrabbit</groupId>
			<artifactId>jackrabbit-jcr-commons</artifactId>
			<version>2.14.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>jackrabbit-api</artifactId>
			<version>2.16.3</version>
			<groupId>org.apache.jackrabbit</groupId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
			<version>1.0-R1534292</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.testing.sling-mock.junit4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.testing.sling-mock</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.testing.sling-mock-jackrabbit</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.testing.sling-mock-oak</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.wcm</groupId>
			<artifactId>io.wcm.testing.aem-mock.junit4</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.jackrabbit</groupId>
					<artifactId>oak-jcr</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
		</dependency>
		<dependency>
			<groupId>me.alexpanov</groupId>
			<artifactId>free-port-finder</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.findify</groupId>
			<artifactId>s3mock_2.11</artifactId>
			<version>0.2.5</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.amazonaws</groupId>
					<artifactId>aws-java-sdk-s3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-matchers</artifactId>
			<version>2.6.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.jknack</groupId>
			<artifactId>handlebars</artifactId>
			<version>4.0.6</version>
			<scope>provided</scope>
		</dependency>
		<!-- put UberJar last so that more specific artifacts take precedence -->
		<dependency>
			<groupId>com.adobe.aem</groupId>
			<artifactId>uber-jar</artifactId>
			<classifier>apis</classifier>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.8.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.8.4</version>
			<scope>provided</scope>
		</dependency>
		<!-- Build Dependencies -->
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.annotation</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- ====================================================================== -->
    <!-- P A R E N T P R O J E C T D E S C R I P T I O N -->
    <!-- ====================================================================== -->
    <parent>
        <groupId>com.adobe.acs</groupId>
        <artifactId>acs-aem-commons</artifactId>
        <version>4.4.3-SNAPSHOT</version>
    </parent>

    <!-- ====================================================================== -->
    <!-- P R O J E C T D E S C R I P T I O N -->
    <!-- ====================================================================== -->

    <artifactId>acs-aem-commons-content</artifactId>
    <name>ACS AEM Commons Package</name>
    <packaging>content-package</packaging>

    <build>
        <resources>
            <resource>
                <directory>src/main/content/jcr_root</directory>
                <excludes>
                    <exclude>**/.vlt</exclude>
                    <exclude>**/.vltignore</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/content/META-INF/vault/definition</directory>
                <targetPath>../vault-work/META-INF/vault/definition</targetPath>
            </resource>
            <resource>
                <directory>src/main/content/META-INF/vault</directory>
                <includes>
                    <include>nodetypes.cnd</include>
                    <include>privileges.xml</include>
                </includes>
                <targetPath>../vault-work/META-INF/vault</targetPath>
            </resource>
            <resource>
                <directory>src/main/resources/META-INF</directory>
                <targetPath>../vault-work/META-INF</targetPath>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <includeEmptyDirs>true</includeEmptyDirs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.day.jcr.vault</groupId>
                <artifactId>content-package-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <group>adobe/consulting</group>
                    <properties>
                        <description>ACS AEM Commons container content package which delivers acs-aem-commons-ui.apps and acs-aem-commons-ui.content.</description>
                    </properties>
                    <filterSource>src/main/content/META-INF/vault/filter.xml</filterSource>
                    <targetURL>http://${crx.host}:${crx.port}${crx.contextRoot}/crx/packmgr/service.jsp</targetURL>
                </configuration>
                <executions>
                    <execution>
                        <id>default-package</id>
                        <configuration>
                            <subPackages>
                                <subPackage>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>acs-aem-commons-ui.apps</artifactId>
                                    <scope>runtime</scope> <!-- this is hacky, but seems to be the easiest way to include the min artifacts since there's no way to specify a blank classifier -->
                                    <filter>true</filter>
                                </subPackage>
                                <subPackage>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>acs-aem-commons-ui.content</artifactId>
                                    <scope>runtime</scope>
                                    <filter>true</filter>
                                </subPackage>
                            </subPackages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-min-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.build.finalName}-min</finalName>
                            <subPackages>
                                <subPackage>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>acs-aem-commons-ui.apps</artifactId>
                                    <classifier>min</classifier>
                                    <filter>true</filter>
                                </subPackage>
                                <subPackage>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>acs-aem-commons-ui.content</artifactId>
                                    <classifier>min</classifier>
                                    <filter>true</filter>
                                </subPackage>
                            </subPackages>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!--
            Since the min package execution of the content-package-maven-plugin is run second, the min artifact will be attached as the default project artifact.
            So we have to override that to switch back to the originally produced artifact.
            -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reset-project-artifact</id>
                        <phase>package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                def mainArtifact = new File(project.build.directory, "${project.build.finalName}.zip"); 
                                project.getArtifact().setFile(mainArtifact); 
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-${project.version}-min.zip</file>
                                    <type>zip</type>
                                    <classifier>min</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>net.adamcin.oakpal</groupId>
                <artifactId>oakpal-maven-plugin</artifactId>
                <configuration>
                    <deferBuildFailure>true</deferBuildFailure>
                    <checklists>
                        <checklist>acs-internal</checklist>
                    </checklists>
                    <!-- use mvn oakpal:webster -Dwebster.repositoryHome=/path/to/crx-quickstart/repository to update
                    nodetypes.cnd and privileges.xml in the package -->
                    <websterTargets>
                        <nodetypes />
                        <privileges />
                    </websterTargets>
                </configuration>
                <executions>
                    <execution>
                        <id>oakpal-scan</id>
                        <goals>
                            <goal>scan</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>oakpal-scan-content-class-aem65</id>
                        <goals>
                            <goal>scan</goal>
                        </goals>
                        <configuration>
                            <summaryFile>${project.build.directory}/oakpal-plugin/reports/content-class-aem65.json</summaryFile>
                            <checklists>
                                <checklist>content-class-aem65</checklist>
                            </checklists>
                        </configuration>
                    </execution>
                    <execution>
                        <id>oakpal-scan-content-class-aem64</id>
                        <goals>
                            <goal>scan</goal>
                        </goals>
                        <configuration>
                            <summaryFile>${project.build.directory}/oakpal-plugin/reports/content-class-aem64.json</summaryFile>
                            <checklists>
                                <checklist>content-class-aem64</checklist>
                            </checklists>
                        </configuration>
                    </execution>
                    <execution>
                        <id>oakpal-scan-min</id>
                        <goals>
                            <goal>scan-many</goal>
                        </goals>
                        <configuration>
                            <summaryFile>${project.build.directory}/oakpal-plugin/reports/oakpal-summary-min.json</summaryFile>
                            <scanArtifacts>
                                <artifact>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>min</classifier>
                                    <type>zip</type>
                                </artifact>
                            </scanArtifacts>
                        </configuration>
                    </execution>
                    <execution>
                        <id>oakpal-verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <summaryFiles>
                                <summaryFile>${project.build.directory}/oakpal-plugin/reports/content-class-aem64.json</summaryFile>
                                <summaryFile>${project.build.directory}/oakpal-plugin/reports/content-class-aem65.json</summaryFile>
                                <summaryFile>${project.build.directory}/oakpal-plugin/reports/oakpal-summary-min.json</summaryFile>
                            </summaryFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- avoid failing on JS vulnerabilities - TODO to fix -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <configuration>
                    <failBuildOnAnyVulnerability>false</failBuildOnAnyVulnerability>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>acs-aem-commons-ui.apps</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>acs-aem-commons-ui.apps</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
            <classifier>min</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>acs-aem-commons-ui.content</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>acs-aem-commons-ui.content</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
            <classifier>min</classifier>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>autoInstallPackage</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.day.jcr.vault</groupId>
                        <artifactId>content-package-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-content-package</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
